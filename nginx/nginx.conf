worker_processes 1;

events { worker_connections 1024; }

http {
  resolver 127.0.0.11 ipv6=off;

  map $ssl_client_cert $ssl_client_escaped_cert {
    default "";
  }

  server {
    listen 0.0.0.0:443 ssl http2;
    server_name _;

    ssl_certificate     /etc/nginx/certs/server.pem;
    ssl_certificate_key /etc/nginx/certs/server-key.pem;

    # NO pedir certificado por defecto (evita problemas con proxies)
    ssl_verify_client off;
    ssl_verify_depth 5;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # --- Handshake: aquí SÍ pedimos cert (selector abierto) ---
    location = /api/handshake {
      # Pedimos cert al cliente sin anunciar CAs
      ssl_verify_client optional_no_ca;

      # si no presenta cert → 496
      if ($ssl_client_cert = "") { return 496; }

      proxy_pass http://backend:4000;
      proxy_set_header X-SSL-Client-Cert      $ssl_client_escaped_cert;
      proxy_set_header X-SSL-Client-Verify    $ssl_client_verify;
      proxy_set_header X-SSL-Client-Serial    $ssl_client_serial;
      proxy_set_header X-SSL-Client-S-DN      $ssl_client_s_dn;
      proxy_set_header X-SSL-Client-I-DN      $ssl_client_i_dn;
      proxy_set_header X-SSL-Client-NotBefore $ssl_client_v_start;
      proxy_set_header X-SSL-Client-NotAfter  $ssl_client_v_end;
      proxy_set_header X-SSL-Protocol         $ssl_protocol;
      proxy_set_header X-SSL-Cipher           $ssl_cipher;
    }

    # --- Certinfo (no fuerza mTLS) ---
    location = /api/certinfo {
      proxy_pass http://backend:4000;
      proxy_set_header X-SSL-Client-Cert      $ssl_client_escaped_cert;
      proxy_set_header X-SSL-Client-Verify    $ssl_client_verify;
      proxy_set_header X-SSL-Client-Serial    $ssl_client_serial;
      proxy_set_header X-SSL-Client-S-DN      $ssl_client_s_dn;
      proxy_set_header X-SSL-Client-I-DN      $ssl_client_i_dn;
      proxy_set_header X-SSL-Client-NotBefore $ssl_client_v_start;
      proxy_set_header X-SSL-Client-NotAfter  $ssl_client_v_end;
      proxy_set_header X-SSL-Protocol         $ssl_protocol;
      proxy_set_header X-SSL-Cipher           $ssl_cipher;
    }

    # --- Otras APIs ---
    location /api/ {
      proxy_pass http://backend:4000;
    }

    # --- Frontend ---
    location / {
      proxy_pass http://frontend:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
    }
  }
}
