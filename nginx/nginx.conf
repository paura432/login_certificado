worker_processes auto;
events { worker_connections 1024; }

http {
  # Upstreams por nombre de servicio Docker
  upstream frontend { server frontend:3000; }
  upstream backend  { server backend:4000; }

  map $ssl_client_cert $ssl_client_escaped_cert { default ""; }

  server {
    listen 80;
    server_name norteverse.trustos.telefonicatech.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name norteverse.trustos.telefonicatech.com;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # --- FRONT: sirve Next bajo /login_cert (con basePath) ---
    location /login_cert/ {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
    }

    # --- Handshake: pide certificado SOLO aquí ---
    location = /login_cert/api/handshake {
      ssl_verify_client optional_no_ca;
      if ($ssl_client_cert = "") { return 496; }

      proxy_pass http://backend/api/handshake;  # strip /login_cert
      proxy_set_header X-SSL-Client-Cert      $ssl_client_escaped_cert;
      proxy_set_header X-SSL-Client-Verify    $ssl_client_verify;
      proxy_set_header X-SSL-Client-Serial    $ssl_client_serial;
      proxy_set_header X-SSL-Client-S-DN      $ssl_client_s_dn;
      proxy_set_header X-SSL-Client-I-DN      $ssl_client_i_dn;
      proxy_set_header X-SSL-Client-NotBefore $ssl_client_v_start;
      proxy_set_header X-SSL-Client-NotAfter  $ssl_client_v_end;
      proxy_set_header X-SSL-Protocol         $ssl_protocol;
      proxy_set_header X-SSL-Cipher           $ssl_cipher;
    }

    # --- API normal: quita /login_cert antes de pasar al back ---
    location /login_cert/api/ {
      proxy_pass http://backend/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    # opcional: raíz a /login_cert
    location = / { return 301 /login_cert/; }
  }
}
