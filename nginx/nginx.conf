worker_processes auto;
events { worker_connections 1024; }

http {
  upstream frontend { server frontend:3000; }
  upstream backend  { server backend:4000; }

  # --- HTTP (80): default_server para ALB y bots por IP ---
  server {
    listen 80 default_server;
    server_name _;

    # Health del ALB -> 200 (SIN redirigir)
    location = /_elb_health { return 200; }

    # El resto del tráfico -> https
    return 301 https://$host$request_uri;
  }
  # --- HTTPS (443) ---
  server {
    listen 443 ssl http2 default_server;
    server_name norteverse.trustos.telefonicatech.com;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # Pedir cert de cliente en el handshake (no obligatorio)
    ssl_verify_client optional_no_ca;

    # Health del ALB también aquí por si el TG apunta a 443
    location = /_elb_health { return 200; }

    # FRONT: Next con basePath /login_cert
    location /login_cert/ {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
    }

    # API normal en raíz /api → backend
    location /api/ {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
    }

    # Handshake (mTLS requerido): si no hay cert válido → 496
    location = /api/handshake {
      if ($ssl_client_verify != SUCCESS) { return 496; }
      proxy_pass http://backend/api/handshake;
      proxy_set_header X-SSL-Client-Cert      $ssl_client_escaped_cert;
      proxy_set_header X-SSL-Client-Verify    $ssl_client_verify;
      proxy_set_header X-SSL-Client-Serial    $ssl_client_serial;
      proxy_set_header X-SSL-Client-S-DN      $ssl_client_s_dn;
      proxy_set_header X-SSL-Client-I-DN      $ssl_client_i_dn;
      proxy_set_header X-SSL-Client-NotBefore $ssl_client_v_start;
      proxy_set_header X-SSL-Client-NotAfter  $ssl_client_v_end;
      proxy_set_header X-SSL-Protocol         $ssl_protocol;
      proxy_set_header X-SSL-Cipher           $ssl_cipher;
    }

    # raíz → /login_cert
    location = / { return 301 /login_cert/; }
  }
}
