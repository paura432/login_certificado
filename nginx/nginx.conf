worker_processes auto;
events { worker_connections 1024; }

http {
  upstream frontend { server frontend:3000; }
  upstream backend  { server backend:4000; }

  server {
    listen 80 default_server;
    server_name _;

    # No construir Location absolutos (por si acaso)
    absolute_redirect off;

    # Health del ALB
    location = /_elb_health { return 200; }

    # --- API: PRIORIDAD MÁXIMA ---
    # ^~ garantiza que este prefijo gane a cualquier otro y que no entren regex
    location ^~ /api/ {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_redirect off;
    }

    # API también si el front llama relativo bajo /login_cert
    location ^~ /login_cert/api/ {
      proxy_pass http://backend/api/;
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_redirect off;
    }

    # Front en /login_cert (sin tocar barras ni redirigir)
    location ^~ /login_cert/ {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        "upgrade";
      proxy_buffering off;
      proxy_redirect off;
    }

    # Raíz → mueve al inicio del front (sin barra final para evitar 308 de Next)
    location = / { return 301 /login_cert; }
  }
}
