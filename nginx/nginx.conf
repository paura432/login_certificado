worker_processes auto;
events { worker_connections 1024; }

http {
  upstream frontend { server frontend:3000; }
  upstream backend  { server backend:4000; }

  server {
    listen 80 default_server;
    server_name _;

    # Evita que Nginx convierta la Location a absoluta (http://...)
    absolute_redirect off;

    # Health del ALB (no redirigir)
    location = /_elb_health { return 200; }

    # === API (/api) → backend (sin redirecciones) ===
    location /api/ {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
    }

    # === FRONT, SIN BARRA: NO REDIRIGIR, PROXY DIRECTO ===
    location = /login_cert {
      proxy_pass http://frontend;              # conserva la URI /login_cert
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
      proxy_redirect off;
    }

    # === FRONT, CON BARRA: TAMBIÉN PROXY DIRECTO ===
    location ^~ /login_cert/ {
      proxy_pass http://frontend;              # conserva /login_cert/...
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
      proxy_redirect off;
    }

    # Solo la raíz redirige (relativo) → una única redirección
    location = / { return 301 /login_cert; }
  }
}
