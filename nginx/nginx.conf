worker_processes 1;

events { worker_connections 1024; }

http {
  # Para pasar el cert al backend en cabecera
  map $ssl_client_cert $ssl_client_escaped_cert {
    default "";
  }

  server {
    listen 443 ssl http2;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/server.pem;
    ssl_certificate_key /etc/nginx/certs/server-key.pem;

    # ❌ No anunciar CAs → no uses ssl_client_certificate
    # ❗ Importante: usa optional_no_ca para no requerir ssl_client_certificate
    ssl_verify_client optional_no_ca;
    ssl_verify_depth 5;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # --- Handshake: exige que PRESENTE cert (aunque NGINX no lo valide) ---
    location = /api/handshake {
      # Si no hay cert presentado, 496
      if ($ssl_client_cert = "") { return 496; }

      proxy_pass http://backend:4000;
      proxy_set_header X-SSL-Client-Cert      $ssl_client_escaped_cert;
      proxy_set_header X-SSL-Client-Verify    $ssl_client_verify;   # será FAILED/NONE aquí (normal)
      proxy_set_header X-SSL-Client-Serial    $ssl_client_serial;
      proxy_set_header X-SSL-Client-S-DN      $ssl_client_s_dn;
      proxy_set_header X-SSL-Client-I-DN      $ssl_client_i_dn;
      proxy_set_header X-SSL-Client-NotBefore $ssl_client_v_start;
      proxy_set_header X-SSL-Client-NotAfter  $ssl_client_v_end;
      proxy_set_header X-SSL-Protocol         $ssl_protocol;
      proxy_set_header X-SSL-Cipher           $ssl_cipher;
    }

    # --- Certinfo: opcional (si hay cert, lo ves) ---
    location = /api/certinfo {
      proxy_pass http://backend:4000;
      proxy_set_header X-SSL-Client-Cert      $ssl_client_escaped_cert;
      proxy_set_header X-SSL-Client-Verify    $ssl_client_verify;
      proxy_set_header X-SSL-Client-Serial    $ssl_client_serial;
      proxy_set_header X-SSL-Client-S-DN      $ssl_client_s_dn;
      proxy_set_header X-SSL-Client-I-DN      $ssl_client_i_dn;
      proxy_set_header X-SSL-Client-NotBefore $ssl_client_v_start;
      proxy_set_header X-SSL-Client-NotAfter  $ssl_client_v_end;
      proxy_set_header X-SSL-Protocol         $ssl_protocol;
      proxy_set_header X-SSL-Cipher           $ssl_cipher;
    }

    # --- Otras APIs ---
    location /api/ {
      proxy_pass http://backend:4000;
    }

    # --- Frontend ---
    location / {
      proxy_pass http://frontend:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
    }
  }
}
